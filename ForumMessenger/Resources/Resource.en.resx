<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="An error occurred while processing your request" xml:space="preserve">
    <value>An error occurred while processing your request</value>
  </data>
  <data name="Are you sure you want to delete this chat" xml:space="preserve">
    <value>Are you sure you want to delete this chat?</value>
  </data>
  <data name="Are you sure you want to delete this message" xml:space="preserve">
    <value>Are you sure you want to delete this message?</value>
  </data>
  <data name="Are you sure you want to delete this user" xml:space="preserve">
    <value>Are you sure you want to delete this user?</value>
  </data>
  <data name="Authorisation" xml:space="preserve">
    <value>Authorisation</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Chat List" xml:space="preserve">
    <value>Chat List</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>ConfirmPassword</value>
  </data>
  <data name="CreateMessage" xml:space="preserve">
    <value>Create Message</value>
  </data>
  <data name="Date and time" xml:space="preserve">
    <value>Date and time</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DstUserLogin" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit User" xml:space="preserve">
    <value>Edit User</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>Email Invalid</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email Required</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Forum Messenger" xml:space="preserve">
    <value>Forum Messenger</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Homepage" xml:space="preserve">
    <value>Homepage</value>
  </data>
  <data name="IncorrectLoginOrPassword" xml:space="preserve">
    <value>Incorrect Login or Password</value>
  </data>
  <data name="Letters only" xml:space="preserve">
    <value>Letters only</value>
  </data>
  <data name="ListMessages" xml:space="preserve">
    <value>Messages List</value>
  </data>
  <data name="ListUsers" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginInvalid" xml:space="preserve">
    <value>Login must be 4 - 8 symbols a-z and/or 0-9</value>
  </data>
  <data name="LoginIsUsed" xml:space="preserve">
    <value>Login is used</value>
  </data>
  <data name="LoginRequired" xml:space="preserve">
    <value>Login is required</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Message Exchange" xml:space="preserve">
    <value>Message Exchange</value>
  </data>
  <data name="MessageCannotBeEmpty" xml:space="preserve">
    <value>Message cannot be empty</value>
  </data>
  <data name="MessageSent" xml:space="preserve">
    <value>Message was sent</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameInvalid" xml:space="preserve">
    <value>Name must contain only capital and small letters</value>
  </data>
  <data name="NameLengthInvalid" xml:space="preserve">
    <value>Name must be 3 - 50 symbols</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordLengthInvalid" xml:space="preserve">
    <value>Password must be 5 - 18 symbols</value>
  </data>
  <data name="PasswordMustMatch" xml:space="preserve">
    <value>Passwords must match</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Russian" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Sign In" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SrcUserLogin" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="SurnameLenghInvalid" xml:space="preserve">
    <value>Surname must be 3 - 50 symbols</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>Surname is required</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="UnAuthorized" xml:space="preserve">
    <value>Unauthorized Access!</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="You are not authorised" xml:space="preserve">
    <value>You are not authorised</value>
  </data>
  <data name="You do not have permission to access this page" xml:space="preserve">
    <value>You do not have permission to access this page!</value>
  </data>
  <data name="Your login" xml:space="preserve">
    <value>Your login</value>
  </data>
</root>